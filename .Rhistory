plotlyOutput("polar"),
p("ScatterPlot of attacks per month and weekday")
)
)
)
),
tabPanel("Country ranking",
fluidPage(
titlePanel("World Terrorism"),
sidebarLayout(
sidebarPanel(
helpText("Country rankings"),
selectInput("var_barplot_continent",
label = "Choose a continent.",
choices = c("Global",
"Central America & Caribbean",
"North America",
"Southeast Asia",
"Western Europe",
"East Asia",
"South America",
"Eastern Europe",
"Sub-Saharan Africa",
"Middle East & North Africa",
"Australasia & Oceania",
"South Asia",
"Central Asia"
),
selected = "Global"
),
numericInput(
"var_number_columns",
"Choose the number of columns to display",
6,
min = 3,
max = 12
),
radioButtons("var_variable", h3("Variable to display"),
choices = list("Number of victims" = "nkill",
"Number of attacks" = "number_attacks",
"Successful attacks" = "success"),selected = "nkill"),
h3("Change sort order"),
actionButton("sortbutton", "", icon = icon("arrows-v"))
),
mainPanel(
plotOutput("barchart",height = 500),
)
)
)
)
)
server <- function(input, output) {
data_map <- reactive({
crimes[!is.na(plotdf$ISO3), ]
})
output$map <- renderGirafe({
ggiraph(code = print(worldMaps(data_map(), world_data, input$range[1], input$range[2], input$continent, input$WeaponType)))
})
output$polar <- renderPlotly({
ScattPlot(crimes, input$var_scatter_continent, input$var_scatter_radio)
})
output$barchart <- renderPlot({
Barcharplot(crimes, input$var_barplot_continent, input$var_number_columns, input$sortbutton, input$var_variable)
})
}
# Run app
shinyApp(ui = ui, server = server)
runApp()
if(!require(magrittr)) install.packages("magrittr")
if(!require(rvest)) install.packages("rvest")
if(!require(maps)) install.packages("maps")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(readxl)) install.packages("readxl")
if(!require(ggiraph)) install.packages("ggiraph")
if(!require(RColorBrewer)) install.packages("RColorBrewer")
if(!require(plotly)) install.packages("plotly")
if(!require(dplyr)) install.packages("dplyr")
if(!require(forcats)) install.packages("forcats")
source("helpers.R")
source("main.R")
ui <- 	navbarPage("World Terrorism",
tabPanel("Interactive Map",
fluidPage(
titlePanel("World Terrorism"),
sidebarLayout(
sidebarPanel(
helpText("Date range of data."),
selectInput("continent",
label = "Choose a continent.",
choices = c("Global",
"Central America & Caribbean",
"North America",
"Southeast Asia",
"Western Europe",
"East Asia",
"South America",
"Eastern Europe",
"Sub-Saharan Africa",
"Middle East & North Africa",
"Australasia & Oceania",
"South Asia",
"Central Asia"
),
selected = "Global"
),
sliderInput("range",
"Years:",
min = 1970,
max = 2018,
value=c(1970, 2018)
),
checkboxGroupInput(inputId = "WeaponType",
label = 'Weapon Type:', choices = c("Explosives" = "Explosives",
"Firearms" = "Firearms",
"Incendiary" = "Incendiary",
"Other" = "Other"),
selected = c("Explosives" = "Explosives",
"Firearms" = "Firearms",
"Incendiary" = "Incendiary",
"Other" = "Other"),inline=TRUE)
),
mainPanel(
girafeOutput("map")
)
)
)
),
tabPanel("Month & Day",
fluidPage(
titlePanel("World Terrorism"),
sidebarLayout(
sidebarPanel(
helpText("Date range of data."),
selectInput("var_scatter_continent",
label = "Choose a continent.",
choices = c("Global",
"Central America & Caribbean",
"North America",
"Southeast Asia",
"Western Europe",
"East Asia",
"South America",
"Eastern Europe",
"Sub-Saharan Africa",
"Middle East & North Africa",
"Australasia & Oceania",
"South Asia",
"Central Asia"
),
selected = "Global"
),
radioButtons("var_scatter_radio", h3("Radio buttons"),
choices = list("Monthly" = 1, "Dayly" = 2),selected = 1)
),
mainPanel(
plotlyOutput("polar"),
p("ScatterPlot of attacks per month and weekday")
)
)
)
),
tabPanel("Country ranking",
fluidPage(
titlePanel("World Terrorism"),
sidebarLayout(
sidebarPanel(
helpText("Country rankings"),
selectInput("var_barplot_continent",
label = "Choose a continent.",
choices = c("Global",
"Central America & Caribbean",
"North America",
"Southeast Asia",
"Western Europe",
"East Asia",
"South America",
"Eastern Europe",
"Sub-Saharan Africa",
"Middle East & North Africa",
"Australasia & Oceania",
"South Asia",
"Central Asia"
),
selected = "Global"
),
numericInput(
"var_number_columns",
"Choose the number of columns to display",
6,
min = 3,
max = 12
),
radioButtons("var_variable", h3("Variable to display"),
choices = list("Number of victims" = "nkill",
"Number of attacks" = "number_attacks",
"Successful attacks" = "success"),selected = "nkill"),
h3("Change sort order"),
actionButton("sortbutton", "", icon = icon("arrows-v"))
),
mainPanel(
plotOutput("barchart",height = 500),
)
)
)
)
)
server <- function(input, output) {
data_map <- reactive({
crimes[!is.na(crimes$ISO3), ]
})
output$map <- renderGirafe({
ggiraph(code = print(worldMaps(data_map(), world_data, input$range[1], input$range[2], input$continent, input$WeaponType)))
})
output$polar <- renderPlotly({
ScattPlot(crimes, input$var_scatter_continent, input$var_scatter_radio)
})
output$barchart <- renderPlot({
Barcharplot(crimes, input$var_barplot_continent, input$var_number_columns, input$sortbutton, input$var_variable)
})
}
# Run app
shinyApp(ui = ui, server = server)
runApp()
iso_codes <- iso_codes[!apply(iso_codes, 1, function(x){all(x == x[1])}), ]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
if(!require(magrittr)) install.packages("magrittr")
if(!require(rvest)) install.packages("rvest")
if(!require(maps)) install.packages("maps")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(readxl)) install.packages("readxl")
if(!require(ggiraph)) install.packages("ggiraph")
if(!require(RColorBrewer)) install.packages("RColorBrewer")
if(!require(plotly)) install.packages("plotly")
if(!require(dplyr)) install.packages("dplyr")
if(!require(forcats)) install.packages("forcats")
source("helpers.R")
source("main.R")
source("ui.R")
server <- function(input, output) {
data_map <- reactive({
crimes[!is.na(crimes$ISO3), ]
})
data_bar1 <- reactive({
plotdf <- crimes
plotdf$number_attacks <- 1
if (input$var_sorter %% 2 == 0) {input$var_sorter <- 1} else {input$var_sorter <- 0}
plotdf <- plotdf %>%
select(country_txt, UQ(input$variable), region_txt) %>%
filter(if (input$continent != "Global") region_txt == input$continent else TRUE) %>%
group_by(country_txt)
})
data_bar2 <- reactive({
data_bar1() %>%
summarise(across(UQ(input$variable),sum), .groups = "drop")
})
output$map <- renderGirafe({
ggiraph(code = print(worldMaps(data_map(), world_data, input$range[1], input$range[2], input$continent, input$WeaponType)))
})
output$polar <- renderPlotly({
ScattPlot(crimes, input$var_scatter_continent, input$var_scatter_radio)
})
output$barchart <- renderPlot({
Barcharplot(data_bar2(), input$var_barplot_continent, input$var_number_columns, input$sortbutton, input$var_variable)
})
}
# Run app
shinyApp(ui = ui, server = server)
runApp()
if(!require(magrittr)) install.packages("magrittr")
if(!require(rvest)) install.packages("rvest")
if(!require(maps)) install.packages("maps")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(readxl)) install.packages("readxl")
if(!require(ggiraph)) install.packages("ggiraph")
if(!require(RColorBrewer)) install.packages("RColorBrewer")
if(!require(plotly)) install.packages("plotly")
if(!require(dplyr)) install.packages("dplyr")
if(!require(forcats)) install.packages("forcats")
source("helpers.R")
source("main.R")
source("ui.R")
server <- function(input, output) {
data_map <- reactive({
crimes[!is.na(crimes$ISO3), ]
})
data_bar1 <- reactive({
plotdf <- crimes
plotdf$number_attacks <- 1
if (input$var_sorter %% 2 == 0) {input$var_sorter <- 1} else {input$var_sorter <- 0}
plotdf <- plotdf %>%
select(country_txt, UQ(input$variable), region_txt) %>%
filter(if (input$var_barplot_continent != "Global") region_txt == input$var_barplot_continent else TRUE) %>%
group_by(country_txt)
})
data_bar2 <- reactive({
data_bar1() %>%
summarise(across(UQ(input$variable),sum), .groups = "drop")
})
output$map <- renderGirafe({
ggiraph(code = print(worldMaps(data_map(), world_data, input$range[1], input$range[2], input$continent, input$WeaponType)))
})
output$polar <- renderPlotly({
ScattPlot(crimes, input$var_scatter_continent, input$var_scatter_radio)
})
output$barchart <- renderPlot({
Barcharplot(data_bar2(), input$var_barplot_continent, input$var_number_columns, input$sortbutton, input$var_variable)
})
}
# Run app
shinyApp(ui = ui, server = server)
runApp()
if(!require(magrittr)) install.packages("magrittr")
if(!require(rvest)) install.packages("rvest")
if(!require(maps)) install.packages("maps")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(readxl)) install.packages("readxl")
if(!require(ggiraph)) install.packages("ggiraph")
if(!require(RColorBrewer)) install.packages("RColorBrewer")
if(!require(plotly)) install.packages("plotly")
if(!require(dplyr)) install.packages("dplyr")
if(!require(forcats)) install.packages("forcats")
source("helpers.R")
source("main.R")
source("ui.R")
server <- function(input, output) {
data_map <- reactive({
crimes[!is.na(crimes$ISO3), ]
})
data_bar1 <- reactive({
plotdf <- crimes
plotdf$number_attacks <- 1
if (input$var_sorter %% 2 == 0) {input$var_sorter <- 1} else {input$var_sorter <- 0}
plotdf <- plotdf %>%
select(country_txt, UQ(input$var_variable), region_txt) %>%
filter(if (input$var_barplot_continent != "Global") region_txt == input$var_barplot_continent else TRUE) %>%
group_by(country_txt)
})
data_bar2 <- reactive({
data_bar1() %>%
summarise(across(UQ(input$var_variable),sum), .groups = "drop")
})
output$map <- renderGirafe({
ggiraph(code = print(worldMaps(data_map(), world_data, input$range[1], input$range[2], input$continent, input$WeaponType)))
})
output$polar <- renderPlotly({
ScattPlot(crimes, input$var_scatter_continent, input$var_scatter_radio)
})
output$barchart <- renderPlot({
Barcharplot(data_bar2(), input$var_barplot_continent, input$var_number_columns, input$sortbutton, input$var_variable)
})
}
# Run app
shinyApp(ui = ui, server = server)
runApp()
if(!require(magrittr)) install.packages("magrittr")
if(!require(rvest)) install.packages("rvest")
if(!require(maps)) install.packages("maps")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(readxl)) install.packages("readxl")
if(!require(ggiraph)) install.packages("ggiraph")
if(!require(RColorBrewer)) install.packages("RColorBrewer")
if(!require(plotly)) install.packages("plotly")
if(!require(dplyr)) install.packages("dplyr")
if(!require(forcats)) install.packages("forcats")
source("helpers.R")
source("main.R")
source("ui.R")
server <- function(input, output) {
data_map <- reactive({
crimes[!is.na(crimes$ISO3), ]
})
data_bar1 <- reactive({
req(input$var_barplot_continent)
plotdf <- crimes
plotdf$number_attacks <- 1
if (input$var_sorter %% 2 == 0) {input$var_sorter <- 1} else {input$var_sorter <- 0}
plotdf <- plotdf %>%
select(country_txt, UQ(input$var_variable), region_txt) %>%
filter(if (input$var_barplot_continent != "Global") region_txt == input$var_barplot_continent else TRUE) %>%
group_by(country_txt)
})
data_bar2 <- reactive({
data_bar1() %>%
summarise(across(UQ(input$var_variable),sum), .groups = "drop")
})
output$map <- renderGirafe({
ggiraph(code = print(worldMaps(data_map(), world_data, input$range[1], input$range[2], input$continent, input$WeaponType)))
})
output$polar <- renderPlotly({
ScattPlot(crimes, input$var_scatter_continent, input$var_scatter_radio)
})
output$barchart <- renderPlot({
Barcharplot(data_bar2(), input$var_barplot_continent, input$var_number_columns, input$sortbutton, input$var_variable)
})
}
# Run app
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
runApp()
if(!require(magrittr)) install.packages("magrittr")
if(!require(rvest)) install.packages("rvest")
if(!require(maps)) install.packages("maps")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(readxl)) install.packages("readxl")
if(!require(ggiraph)) install.packages("ggiraph")
if(!require(RColorBrewer)) install.packages("RColorBrewer")
if(!require(plotly)) install.packages("plotly")
if(!require(dplyr)) install.packages("dplyr")
if(!require(forcats)) install.packages("forcats")
source("helpers.R")
source("main.R")
source("ui.R")
server <- function(input, output) {
data_map <- reactive({
crimes[!is.na(crimes$ISO3), ]
})
data_bar1 <- reactive({
plotdf <- crimes
plotdf$number_attacks <- 1
plotdf <- plotdf %>%
select(country_txt, UQ(input$var_variable), region_txt) %>%
filter(if (input$var_barplot_continent != "Global") region_txt == input$var_barplot_continent else TRUE) %>%
group_by(country_txt) %>%
summarise(across(UQ(input$var_variable),sum), .groups = "drop")
})
data_bar2 <- reactive({
if (input$sortbutton %% 2 == 0) {input_var_sorter <- 1} else {input_var_sorter <- 0}
data_bar1() %>%
arrange(if (input_var_sorter == 1) desc(UQ(sym(input$var_variable))) else UQ(sym(input$var_variable)))
})
output$map <- renderGirafe({
ggiraph(code = print(worldMaps(data_map(), world_data, input$range[1], input$range[2], input$continent, input$WeaponType)))
})
output$polar <- renderPlotly({
ScattPlot(crimes, input$var_scatter_continent, input$var_scatter_radio)
})
output$barchart <- renderPlot({
Barcharplot(data_bar2(), input$var_barplot_continent, input$var_number_columns, input$sortbutton, input$var_variable)
})
}
# Run app
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
if(!require(magrittr)) install.packages("magrittr")
if(!require(rvest)) install.packages("rvest")
if(!require(maps)) install.packages("maps")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(readxl)) install.packages("readxl")
if(!require(ggiraph)) install.packages("ggiraph")
if(!require(RColorBrewer)) install.packages("RColorBrewer")
if(!require(plotly)) install.packages("plotly")
if(!require(dplyr)) install.packages("dplyr")
if(!require(forcats)) install.packages("forcats")
source("helpers.R")
source("main.R")
source("ui.R")
server <- function(input, output) {
data_map <- reactive({
crimes[!is.na(crimes$ISO3), ]
})
data_bar1 <- reactive({
plotdf <- crimes
plotdf$number_attacks <- 1
plotdf <- plotdf %>%
select(country_txt, UQ(input$var_variable), region_txt) %>%
filter(if (input$var_barplot_continent != "Global") region_txt == input$var_barplot_continent else TRUE) %>%
group_by(country_txt) %>%
summarise(across(UQ(input$var_variable),sum), .groups = "drop")
})
data_bar2 <- reactive({
if (input$sortbutton %% 2 == 0) {input_var_sorter <- 1} else {input_var_sorter <- 0}
data <- data_bar1() %>%
arrange(if (input_var_sorter == 1) desc(UQ(sym(input$var_variable))) else UQ(sym(input$var_variable)))
data <- data[1:input$var_number_columns,c("country_txt",input$var_variable)]
if (input_var_sorter == 1) {data <- data[nrow(data):1, ]}
})
output$map <- renderGirafe({
ggiraph(code = print(worldMaps(data_map(), world_data, input$range[1], input$range[2], input$continent, input$WeaponType)))
})
output$polar <- renderPlotly({
ScattPlot(crimes, input$var_scatter_continent, input$var_scatter_radio)
})
output$barchart <- renderPlot({
Barcharplot(data_bar2(), input$var_barplot_continent, input$var_number_columns, input$sortbutton, input$var_variable)
})
}
# Run app
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
runApp()
